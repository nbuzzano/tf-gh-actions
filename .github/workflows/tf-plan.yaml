name: "Terraform Plan"

on:
  push:
    branches:
      - main
      - master
  pull_request:

concurrency:
  group: unique-concurrency-group

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  

jobs:
  terraform-plan:
    name: "Terraform plan"
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Run Terrascan
        id: terrascan
        uses: tenable/terrascan-action@main
        with:
          iac_type: 'terraform'
          iac_version: 'v14'
          policy_type: 'aws'
          only_warn: true
      
      - name: Get branch name (merge)
        if: github.event_name != 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV

      - name: Get branch name (pull request)
        if: github.event_name == 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF} | tr / -)" >> $GITHUB_ENV
      
      - name: Install Terraform
        env:
          TERRAFORM_VERSION: "0.13.0"
        run: |
          tf_version=$TERRAFORM_VERSION
          wget https://releases.hashicorp.com/terraform/"$tf_version"/terraform_"$tf_version"_linux_amd64.zip
          unzip terraform_"$tf_version"_linux_amd64.zip
          sudo mv terraform /usr/local/bin/

      - name: Terraform Init
        id: init
        run: |
          cat << EOF > override.tf
          terraform {
            backend "s3" {
              bucket = "mybucket.tfstate"
              key    = "${{ env.BRANCH_NAME }}"
              region = "us-west-2"
            }
          }
          EOF
          terraform init
      
      - name: Get remote state
        uses: dflook/terraform-remote-state@v1
        id: remote-state
        with:
          backend_type: s3
          backend_config: |
            bucket=mybucket.tf-state
            key=${{ env.BRANCH_NAME }}
            region=us-west-2
        continue-on-error: true

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -out=terraform-plan-file -var-file=config/${{ steps.extract_branch.outputs.branch }}.tfvars

      - name: upload terraform plan
        uses: actions/upload-artifact@v3
        if: steps.plan.outcome == 'success'
        with:
          name: terraform-plan-${{ steps.extract_branch.outputs.branch }}
          path: |
            terraform-plan-file