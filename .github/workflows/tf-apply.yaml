name: "Terraform Apply"

on: [workflow_dispatch]

jobs:
  terraform-apply:
    name: "Terraform apply"
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Terraform
        env:
          TERRAFORM_VERSION: "0.13.0"
        run: |
          tf_version=$TERRAFORM_VERSION
          wget https://releases.hashicorp.com/terraform/"$tf_version"/terraform_"$tf_version"_linux_amd64.zip
          unzip terraform_"$tf_version"_linux_amd64.zip
          sudo mv terraform /usr/local/bin/
      
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: tf-plan.yaml
          workflow_conclusion: success
          name: terraform-plan
          
      - name: Terraform Apply
        run: |
          terraform init
          terraform apply -auto-approve -input=false terraform-plan-file
          terraform output -json
          terraform output -json > terraform-apply-output.json      
      
      - uses: actions/upload-artifact@v3
        with:
          name: terraform-apply-output
          path: |
            terraform-apply-output.json
            terraform.tfstate

      - name: Bootstrap FluxCD
        # borro instalacion kubectl, no se usa creo.
        run: |
          curl -s https://fluxcd.io/install.sh | bash
          flux -v
          
          aws eks --region $(cat terraform-apply-output.json | jq -r .cluster_region.value) update-kubeconfig \
            --name $(cat terraform-apply-output.json | jq -r .cluster_name.value) \
            --alias eks-cluster

          flux bootstrap gitlab  --context=eks-cluster \
            --owner=$(cat terraform-apply-output.json | jq -r .flux_git_owner.value) \
            --repository=$(cat terraform-apply-output.json | jq -r .flux_git_repo.value) \
            --branch=$(cat terraform-apply-output.json | jq -r .flux_git_branch.value) \
            --path=clusters/$(cat terraform-apply-output.json | jq -r .cluster_env.value) \
            --token-auth
