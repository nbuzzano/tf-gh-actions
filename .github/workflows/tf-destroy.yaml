name: "Terraform Destroy"

on: [workflow_dispatch] 

concurrency:
  group: unique-concurrency-group

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  

jobs:
  terraform-destroy:
    name: "Terraform destroy"
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Install Terraform
        env:
          TERRAFORM_VERSION: "0.13.0"
        run: |
          tf_version=$TERRAFORM_VERSION
          wget https://releases.hashicorp.com/terraform/"$tf_version"/terraform_"$tf_version"_linux_amd64.zip
          unzip terraform_"$tf_version"_linux_amd64.zip
          sudo mv terraform /usr/local/bin/
      
      - name: Install AWS CLI
        id: install-aws-cli
        uses: unfor19/install-aws-cli-action@v1.0.3
      
      - name: Configure AWS CLI
        id: configure-aws-cli
        run : |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
      
      - name: Get branch name (merge)
        if: github.event_name != 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV

      - name: Get branch name (pull request)
        if: github.event_name == 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF} | tr / -)" >> $GITHUB_ENV

      - name: Get remote state
        uses: dflook/terraform-remote-state@v1
        id: remote-state
        with:
          backend_type: s3
          backend_config: |
            bucket=mybucket.tf-state
            key=${{ env.BRANCH_NAME }}
            region=us-west-2
        continue-on-error: true
      
      - name: Terraform Init
        id: init
        run: |
          cat << EOF > override.tf
          terraform {
            backend "s3" {
              bucket = "mybucket.tfstate"
              key    = "${{ env.BRANCH_NAME }}"
              region = "us-west-2"
            }
          }
          EOF
          terraform init
      
      - name: Get remote state
        uses: dflook/terraform-remote-state@v1
        id: remote-state
        with:
          backend_type: s3
          backend_config: |
            bucket=mybucket.tf-state
            key=${{ env.BRANCH_NAME }}
            region=us-west-2
        continue-on-error: true
      
      - name: Terraform Destroy
        run: |
          terraform destroy -auto-approve
